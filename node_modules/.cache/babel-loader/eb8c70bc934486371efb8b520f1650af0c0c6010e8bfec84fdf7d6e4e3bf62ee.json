{"ast":null,"code":"import Case_1_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_1_Defenseur_Attaque.vue\";\nimport Case_2_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_2_Defenseur_Attaque.vue\";\nimport Case_3_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_3_Defenseur_Attaque.vue\";\nimport Case_4_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_4_Defenseur_Attaque.vue\";\nimport io from \"socket.io-client\";\nimport fonctionnaliteesAttaque from \"@/components/plateauAttaque/fonctionnaliteesAttaque.vue\";\nlet carteEnMain = [];\nexport default {\n  components: {\n    Case_1_Defenseur_Attaque,\n    Case_2_Defenseur_Attaque,\n    Case_3_Defenseur_Attaque,\n    Case_4_Defenseur_Attaque\n  },\n  data() {\n    return {\n      readers: [{\n        id: 1,\n        name: 'Reader 1',\n        image: null\n      }, {\n        id: 2,\n        name: 'Reader 2',\n        image: null\n      }, {\n        id: 3,\n        name: 'Reader 3',\n        image: null\n      }, {\n        id: 4,\n        name: 'Reader 4',\n        image: null\n      }, {\n        id: 5,\n        name: 'Reader 5',\n        image: null\n      }, {\n        id: 6,\n        name: 'Reader 6',\n        image: null\n      }, {\n        id: 7,\n        name: 'Reader 7',\n        image: null\n      }],\n      card: {},\n      readerID: null\n    };\n  },\n  mounted() {\n    this.socket = io('http://localhost:3000');\n    this.socket.on('rfidData', data => {\n      let {\n        readerID,\n        card\n      } = data;\n\n      // Nettoie readerID pour enlever les caractères non numériques\n      readerID = readerID.replace(/\\D/g, ''); // Garde seulement les chiffres\n\n      console.log(\"Cleaned readerID:\", readerID); // Vérifie la valeur nettoyée\n      if (readerID === \"1\") {\n        let deckDefense = fonctionnaliteesAttaque.methods.genererDeckDefense();\n        console.log(\"Deck generer\");\n        console.log(deckDefense);\n        fonctionnaliteesAttaque.methods.DebutTour(deckDefense, carteEnMain);\n        let reader = this.readers.find(caca => caca.id === 1);\n        fonctionnaliteesAttaque.methods.poserCarte(carteEnMain, this.readers[1]);\n        console.log(\"ID\");\n        console.log(reader);\n      }\n\n      // Convertir readerID en nombre\n      const readerIndex = this.readers.findIndex(r => r.id === Number(readerID));\n      console.log(\"Reader Index:\", readerIndex); // Vérifie l'index trouvé\n\n      if (readerIndex !== -1) {\n        this.readers[readerIndex] = {\n          ...this.readers[readerIndex],\n          image: card.image\n        };\n      }\n      console.log(\"Updated reader:\", this.readers[readerIndex]);\n    });\n  }\n};","map":{"version":3,"names":["Case_1_Defenseur_Attaque","Case_2_Defenseur_Attaque","Case_3_Defenseur_Attaque","Case_4_Defenseur_Attaque","io","fonctionnaliteesAttaque","carteEnMain","components","data","readers","id","name","image","card","readerID","mounted","socket","on","replace","console","log","deckDefense","methods","genererDeckDefense","DebutTour","reader","find","caca","poserCarte","readerIndex","findIndex","r","Number"],"sources":["C:\\Users\\courluc\\IdeaProjects\\2024-NPA-PO-Hackstone\\src\\components\\plateauAttaque\\Case_defenseur\\CaseDefenseur_attaque.vue"],"sourcesContent":["<template>\r\n  <div class=\"topReaders_defense\">\r\n    <Case_1_Defenseur_Attaque :id=\"readers[1].id\" :image=\"readers[1].image\"/>\r\n    <Case_2_Defenseur_Attaque :id=\"readers[4].id\" :image=\"readers[4].image\"/>\r\n    <Case_3_Defenseur_Attaque :id=\"readers[6].id\" :image=\"readers[6].image\"/>\r\n    <Case_4_Defenseur_Attaque :id=\"readers[7].id\" :image=\"readers[7].image\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Case_1_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_1_Defenseur_Attaque.vue\";\r\nimport Case_2_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_2_Defenseur_Attaque.vue\";\r\nimport Case_3_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_3_Defenseur_Attaque.vue\";\r\nimport Case_4_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_4_Defenseur_Attaque.vue\";\r\nimport io from \"socket.io-client\";\r\nimport fonctionnaliteesAttaque from \"@/components/plateauAttaque/fonctionnaliteesAttaque.vue\";\r\nlet carteEnMain = [];\r\nexport default {\r\n  components: {\r\n    Case_1_Defenseur_Attaque,\r\n    Case_2_Defenseur_Attaque,\r\n    Case_3_Defenseur_Attaque,\r\n    Case_4_Defenseur_Attaque\r\n  },\r\n  data() {\r\n    return {\r\n      readers: [\r\n        { id: 1, name: 'Reader 1', image: null},\r\n        { id: 2, name: 'Reader 2', image: null},\r\n        { id: 3, name: 'Reader 3', image: null},\r\n        { id: 4, name: 'Reader 4', image: null},\r\n        { id: 5, name: 'Reader 5', image: null},\r\n        { id: 6, name: 'Reader 6', image: null},\r\n        { id: 7, name: 'Reader 7', image: null},\r\n      ],\r\n      card: {},\r\n      readerID: null\r\n    };\r\n  },\r\n\r\n  mounted()\r\n  {\r\n    this.socket = io('http://localhost:3000');\r\n\r\n    this.socket.on('rfidData', (data) => {\r\n      let {readerID, card} = data;\r\n\r\n      // Nettoie readerID pour enlever les caractères non numériques\r\n      readerID = readerID.replace(/\\D/g, ''); // Garde seulement les chiffres\r\n\r\n      console.log(\"Cleaned readerID:\", readerID); // Vérifie la valeur nettoyée\r\n      if (readerID === \"1\"){\r\n        let deckDefense = fonctionnaliteesAttaque.methods.genererDeckDefense();\r\n        console.log(\"Deck generer\");\r\n        console.log(deckDefense);\r\n        fonctionnaliteesAttaque.methods.DebutTour(deckDefense, carteEnMain);\r\n        let reader = this.readers.find(caca => caca.id === 1);\r\n        fonctionnaliteesAttaque.methods.poserCarte(carteEnMain, this.readers[1]);\r\n        console.log(\"ID\");\r\n        console.log(reader);\r\n      }\r\n\r\n\r\n      // Convertir readerID en nombre\r\n      const readerIndex = this.readers.findIndex(r => r.id === Number(readerID));\r\n      console.log(\"Reader Index:\", readerIndex); // Vérifie l'index trouvé\r\n\r\n      if (readerIndex !== -1) {\r\n        this.readers[readerIndex] = {...this.readers[readerIndex], image: card.image};\r\n      }\r\n      console.log(\"Updated reader:\", this.readers[readerIndex]);\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.topReaders_defense {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 147px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}