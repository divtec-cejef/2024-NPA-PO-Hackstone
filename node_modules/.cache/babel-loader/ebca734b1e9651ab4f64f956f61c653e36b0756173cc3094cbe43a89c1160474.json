{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bottomReaders_defense\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Case_1_Defenseur_defense = _resolveComponent(\"Case_1_Defenseur_defense\");\n  const _component_Case_2_Defenseur_defense = _resolveComponent(\"Case_2_Defenseur_defense\");\n  const _component_Case_3_Defenseur_defense = _resolveComponent(\"Case_3_Defenseur_defense\");\n  const _component_Case_4_Defenseur_defense = _resolveComponent(\"Case_4_Defenseur_defense\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Case_1_Defenseur_defense, {\n    id: $data.readers[2].id,\n    image: $data.readers[2].image\n  }, null, 8 /* PROPS */, [\"id\", \"image\"]), _createVNode(_component_Case_2_Defenseur_defense, {\n    id: $data.readers[3].id,\n    image: $data.readers[3].image\n  }, null, 8 /* PROPS */, [\"id\", \"image\"]), _createVNode(_component_Case_3_Defenseur_defense, {\n    id: $data.readers[5].id,\n    image: $data.readers[5].image\n  }, null, 8 /* PROPS */, [\"id\", \"image\"]), _createVNode(_component_Case_4_Defenseur_defense, {\n    id: $data.readers[6].id,\n    image: $data.readers[6].image,\n    card: $data.card\n  }, null, 8 /* PROPS */, [\"id\", \"image\", \"card\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Case_1_Defenseur_defense","id","$data","readers","image","_component_Case_2_Defenseur_defense","_component_Case_3_Defenseur_defense","_component_Case_4_Defenseur_defense","card"],"sources":["C:\\Users\\courluc\\IdeaProjects\\2024-NPA-PO-Hackstone\\src\\components\\plateauDefense\\case_defense\\CaseDefenseur_defense.vue"],"sourcesContent":["<template>\r\n  <div class=\"bottomReaders_defense\">\r\n    <Case_1_Defenseur_defense :id=\"readers[2].id\" :image=\"readers[2].image\"/>\r\n    <Case_2_Defenseur_defense :id=\"readers[3].id\" :image=\"readers[3].image\"/>\r\n    <Case_3_Defenseur_defense :id=\"readers[5].id\" :image=\"readers[5].image\"/>\r\n    <Case_4_Defenseur_defense :id=\"readers[6].id\" :image=\"readers[6].image\" :card=\"card\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Case_1_Defenseur_defense from \"@/components/plateauDefense/case_defense/Case_1_Defenseur_defense.vue\";\r\nimport Case_2_Defenseur_defense from \"@/components/plateauDefense/case_defense/Case_2_Defenseur_defense.vue\";\r\nimport Case_3_Defenseur_defense from \"@/components/plateauDefense/case_defense/Case_3_Defenseur_defense.vue\";\r\nimport Case_4_Defenseur_defense from \"@/components/plateauDefense/case_defense/Case_4_Defenseur_defense.vue\";\r\nimport io from \"socket.io-client\";\r\n\r\nexport default {\r\n  components: {\r\n    Case_1_Defenseur_defense,\r\n    Case_2_Defenseur_defense,\r\n    Case_3_Defenseur_defense,\r\n    Case_4_Defenseur_defense\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      readers: [\r\n        { id: 1, name: 'Reader 1', image: null},\r\n        { id: 2, name: 'Reader 2', image: null},\r\n        { id: 3, name: 'Reader 3', image: null},\r\n        { id: 4, name: 'Reader 4', image: null},\r\n        { id: 5, name: 'Reader 5', image: null},\r\n        { id: 6, name: 'Reader 6', image: null},\r\n        { id: 7, name: 'Reader 7', image: null},\r\n      ],\r\n      card: {},\r\n      readerID: null\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.socket = io('http://localhost:3001');\r\n    this.socket.on('rfidData', (data) => {\r\n      let { readerID, card } = data;\r\n      if (card.type === 'défense' && card.name !== 'Stockage') {\r\n\r\n        // Nettoie readerID pour enlever les caractères non numériques\r\n        readerID = readerID.replace(/\\D/g, ''); // Garde seulement les chiffres\r\n\r\n        console.log(\"Cleaned readerID:\", readerID); // Vérifie la valeur nettoyée\r\n\r\n        this.card = card;\r\n        this.card.image = card.image;\r\n        this.readerID = readerID;\r\n\r\n        // Convertir readerID en nombre\r\n        const readerIndex = this.readers.findIndex(r => r.id === Number(readerID));\r\n        console.log(\"Reader Index:\", readerIndex); // Vérifie l'index trouvé\r\n\r\n        if (readerIndex !== -1) {\r\n          this.readers[readerIndex] = { ...this.readers[readerIndex], image: card.image };\r\n        }\r\n        console.log(\"Updated reader:\", this.readers[readerIndex]);\r\n      } else {\r\n        console.log(`Carte non valide: type ${card.type}. Seules les cartes de type défense sont autorisées.`);\r\n      }\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bottomReaders_defense {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 147px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAuB;;;;;;uBAAlCC,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAAyEC,mCAAA;IAA9CC,EAAE,EAAEC,KAAA,CAAAC,OAAO,IAAIF,EAAE;IAAGG,KAAK,EAAEF,KAAA,CAAAC,OAAO,IAAIC;4CACjEL,YAAA,CAAyEM,mCAAA;IAA9CJ,EAAE,EAAEC,KAAA,CAAAC,OAAO,IAAIF,EAAE;IAAGG,KAAK,EAAEF,KAAA,CAAAC,OAAO,IAAIC;4CACjEL,YAAA,CAAyEO,mCAAA;IAA9CL,EAAE,EAAEC,KAAA,CAAAC,OAAO,IAAIF,EAAE;IAAGG,KAAK,EAAEF,KAAA,CAAAC,OAAO,IAAIC;4CACjEL,YAAA,CAAsFQ,mCAAA;IAA3DN,EAAE,EAAEC,KAAA,CAAAC,OAAO,IAAIF,EAAE;IAAGG,KAAK,EAAEF,KAAA,CAAAC,OAAO,IAAIC,KAAK;IAAGI,IAAI,EAAEN,KAAA,CAAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}