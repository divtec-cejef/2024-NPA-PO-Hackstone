{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"compteurs-attaque\"\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images_compteur, (image, index) => {\n    return _openBlock(), _createElementBlock(\"img\", {\n      key: index,\n      src: image,\n      alt: \"Stacked Image\",\n      style: _normalizeStyle({\n        visibility: $data.visibility[index] ? 'visible' : 'hidden'\n      }),\n      class: \"compteur-attaque\"\n    }, null, 12, _hoisted_2);\n  }), 128))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","images_compteur","image","index","key","src","alt","style","_normalizeStyle","visibility","_hoisted_2"],"sources":["C:\\Users\\courluc\\IdeaProjects\\2024-NPA-PO-Hackstone\\src\\components\\plateauAttaque\\TourAttaquant_attaque.vue"],"sourcesContent":["<template>\r\n  <div class=\"compteurs-attaque\">\r\n    <img v-for=\"(image, index) in images_compteur\" :key=\"index\" :src=\"image\" alt=\"Stacked Image\"\r\n         :style=\"{ visibility: visibility[index] ? 'visible' : 'hidden' }\"\r\n         class=\"compteur-attaque\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      socket: null,\r\n      images_compteur: [\r\n        require('@/img/compteur/compteur_1.png'),\r\n        require('@/img/compteur/compteur_2.png'),\r\n        require('@/img/compteur/compteur_3.png'),\r\n        require('@/img/compteur/compteur_4.png'),\r\n        require('@/img/compteur/compteur_5.png')\r\n      ],\r\n      visibility: [true, true, true, true, true],\r\n    };\r\n\r\n  },\r\n\r\n  mounted() {\r\n    this.socket = io('http://localhost:3000');\r\n\r\n    this.socket.on('rfidData', (data) => {\r\n      const { readerID } = data;\r\n\r\n      // Vérifier si le readerID est 1\r\n      if (readerID === '1)') {\r\n        this.updateVisibility();\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    updateVisibility() {\r\n      for (let i = this.visibility.length - 1; i >= 0; i--) {\r\n        if (this.visibility[i]) {\r\n          this.visibility[i] = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.compteurs-attaque {\r\n  position: absolute;\r\n  bottom: 50px;\r\n  left: 50px; /* Positionner les images en haut à droite */\r\n}\r\n\r\n.compteur-attaque {\r\n  width: 300px;\r\n  height: 300px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;mBADhC;;uBACEC,mBAAA,CAIM,OAJNC,UAIM,I,kBAHJD,mBAAA,CAE8BE,SAAA,QAJlCC,WAAA,CAEkCC,KAAA,CAAAC,eAAe,EAFjD,CAEiBC,KAAK,EAAEC,KAAK;yBAAzBP,mBAAA,CAE8B;MAFkBQ,GAAG,EAAED,KAAK;MAAGE,GAAG,EAAEH,KAAK;MAAEI,GAAG,EAAC,eAAe;MACtFC,KAAK,EAHfC,eAAA;QAAAC,UAAA,EAG+BT,KAAA,CAAAS,UAAU,CAACN,KAAK;MAAA;MACtCR,KAAK,EAAC;iBAJfe,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}