{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../../img/ligne.png';\nconst _hoisted_1 = {\n  class: \"plateau-finale-attaque\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PVDefenseur_attaque = _resolveComponent(\"PVDefenseur_attaque\");\n  const _component_CaseDefenseur_attaque = _resolveComponent(\"CaseDefenseur_attaque\");\n  const _component_TourAttaquant_attaque = _resolveComponent(\"TourAttaquant_attaque\");\n  const _component_CaseAttaquant_attaque = _resolveComponent(\"CaseAttaquant_attaque\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_PVDefenseur_attaque), _createVNode(_component_CaseDefenseur_attaque, {\n    readers: $data.readers,\n    socket: $data.socket\n  }, null, 8, [\"readers\", \"socket\"]), _cache[0] || (_cache[0] = _createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"Ligne\",\n    class: \"line\",\n    id: \"ligne_attaque\"\n  }, null, -1)), _createVNode(_component_TourAttaquant_attaque, {\n    socket: $data.socket\n  }, null, 8, [\"socket\"]), _createVNode(_component_CaseAttaquant_attaque, {\n    readers: $data.readers,\n    socket: $data.socket\n  }, null, 8, [\"readers\", \"socket\"])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_hoisted_1","_createVNode","_component_PVDefenseur_attaque","_component_CaseDefenseur_attaque","readers","$data","socket","_createElementVNode","src","alt","id","_component_TourAttaquant_attaque","_component_CaseAttaquant_attaque"],"sources":["C:\\Users\\courluc\\IdeaProjects\\2024-NPA-PO-Hackstone\\src\\components\\plateauAttaque\\PlateauFinaleAttaquant.vue"],"sourcesContent":["<template>\r\n  <div class=\"plateau-finale-attaque\">\r\n    <!-- PV du défenseur -->\r\n    <PVDefenseur_attaque />\r\n\r\n    <!-- Case de la défense -->\r\n    <CaseDefenseur_attaque :readers=\"readers\" :socket=\"socket\" />\r\n\r\n    <img src=\"../../img/ligne.png\" alt=\"Ligne\" class=\"line\" id=\"ligne_attaque\">\r\n\r\n    <!-- Compteurs de l'attaque -->\r\n    <TourAttaquant_attaque :socket=\"socket\" />\r\n\r\n    <!-- Case de l'attaque -->\r\n    <CaseAttaquant_attaque :readers=\"readers\" :socket=\"socket\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CaseAttaquant_attaque from \"@/components/plateauAttaque/Case_attaquant/CaseAttaquant_attaque.vue\";\r\nimport CaseDefenseur_attaque from \"@/components/plateauAttaque/Case_defenseur/CaseDefenseur_attaque.vue\";\r\nimport TourAttaquant_attaque from \"@/components/plateauAttaque/TourAttaquant_attaque.vue\";\r\nimport PVDefenseur_attaque from \"@/components/plateauAttaque/PVDefenseur_attaque.vue\";\r\nimport io from \"socket.io-client\";\r\nimport fonctionnaliteesAttaque from \"@/components/plateauAttaque/fonctionnaliteesAttaque.vue\";\r\nexport default {\r\n  components: {\r\n    CaseAttaquant_attaque,\r\n    CaseDefenseur_attaque,\r\n    TourAttaquant_attaque,\r\n    PVDefenseur_attaque\r\n  },\r\n  data() {\r\n    return {\r\n      readers: [\r\n        {id: 1, name: 'Reader 1', image: null},\r\n        {id: 2, name: 'Reader 2', image: null},\r\n        {id: 3, name: 'Reader 3', image: null},\r\n        {id: 4, name: 'Reader 4', image: null},\r\n        {id: 5, name: 'Reader 5', image: null},\r\n        {id: 6, name: 'Reader 6', image: null},\r\n        {id: 7, name: 'Reader 7', image: null},\r\n      ],\r\n      socket: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    console.log(this.readers)\r\n    this.socket = io('http://localhost:3000');\r\n    this.socket.on('rfidData', (data) => {\r\n      const { readerID, card } = data;\r\n\r\n      if (card.type === 'attaque') {\r\n        let mappedReaderID = null;\r\n        switch (parseInt(readerID)) {\r\n          case 1:\r\n            mappedReaderID = 1; // Capteur 1 -> Reader 1\r\n            break;\r\n          case 2:\r\n            mappedReaderID = 2; // Capteur 2 -> Reader 2\r\n            break;\r\n          case 3:\r\n            mappedReaderID = 5; // Capteur 3 -> Reader 5\r\n            break;\r\n          case 4:\r\n            mappedReaderID = 6; // Capteur 4 -> Reader 6\r\n            break;\r\n          case 5:\r\n            mappedReaderID = 3; // Capteur 5 -> Reader 3\r\n            break;\r\n          case 6:\r\n            mappedReaderID = 7; // Capteur 6 -> Reader 7\r\n            break;\r\n          case 7:\r\n            mappedReaderID = 4; // Capteur 7 -> Reader 4\r\n            break;\r\n        }\r\n\r\n        const reader = this.readers.find(r => r.id === mappedReaderID);\r\n\r\n        if (!reader) {\r\n          console.log(`No reader found with mapped ID ${mappedReaderID}.`);\r\n        } else if (reader.id === 3) {\r\n          fonctionnaliteesAttaque.methods.attaquer(card, this.readers);\r\n          alert(\"Haha je t'attaque !\");\r\n          //console.log(\"Haha je t'attaque\");\r\n        }\r\n      } else {\r\n        console.log(`Carte non valide: type ${card.type}. Seules les cartes de type attaque sont autorisées.`);\r\n      }\r\n    });\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.line {\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n  max-width: 100%;\r\n  height: auto;\r\n  mix-blend-mode: lighten;\r\n  opacity: 0.9;\r\n}\r\n\r\n#ligne_attaque.line {\r\n  rotate: 180deg;\r\n}\r\n\r\n.plateau-finale-attaque {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n</style>\r\n"],"mappings":";OAQSA,UAAyB;;EAP3BC,KAAK,EAAC;AAAwB;;;;;;uBAAnCC,mBAAA,CAcM,OAdNC,UAcM,GAZJC,YAAA,CAAuBC,8BAAA,GAGvBD,YAAA,CAA6DE,gCAAA;IAArCC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAAGE,MAAM,EAAED,KAAA,CAAAC;gEAEnDC,mBAAA,CAA2E;IAAtEC,GAAyB,EAAzBX,UAAyB;IAACY,GAAG,EAAC,OAAO;IAACX,KAAK,EAAC,MAAM;IAACY,EAAE,EAAC;iBAG3DT,YAAA,CAA0CU,gCAAA;IAAlBL,MAAM,EAAED,KAAA,CAAAC;EAAM,yBAGtCL,YAAA,CAA6DW,gCAAA;IAArCR,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAAGE,MAAM,EAAED,KAAA,CAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}