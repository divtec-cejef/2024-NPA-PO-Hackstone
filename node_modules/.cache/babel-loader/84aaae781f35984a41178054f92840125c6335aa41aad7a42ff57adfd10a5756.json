{"ast":null,"code":"import Case_1_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_1_Defenseur_Attaque.vue\";\nimport Case_2_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_2_Defenseur_Attaque.vue\";\nimport Case_3_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_3_Defenseur_Attaque.vue\";\nimport Case_4_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_4_Defenseur_Attaque.vue\";\nimport io from \"socket.io-client\";\nimport fonctionnaliteesAttaque, { cartesAttaque, stockage } from \"@/components/plateauAttaque/fonctionnaliteesAttaque.vue\";\nlet carteEnMain = [];\nlet deckDefense = fonctionnaliteesAttaque.methods.genererDeckDefense();\nexport default {\n  components: {\n    Case_1_Defenseur_Attaque,\n    Case_2_Defenseur_Attaque,\n    Case_3_Defenseur_Attaque,\n    Case_4_Defenseur_Attaque\n  },\n  props: {\n    readers: {\n      type: Array,\n      required: true\n    }\n  },\n  mounted() {\n    this.socket = io('http://localhost:3000');\n    this.socket.on('rfidData', data => {\n      let {\n        readerID\n      } = data;\n      // Nettoie readerID pour enlever les caractères non numériques\n      readerID = readerID.replace(/\\D/g, ''); // Garde seulement les chiffres\n\n      if (readerID === \"1\") {\n        fonctionnaliteesAttaque.methods.DebutTour(deckDefense, carteEnMain);\n        fonctionnaliteesAttaque.methods.defendMalin(carteEnMain, this.readers[0]);\n        setTimeout(() => {\n          fonctionnaliteesAttaque.methods.defendMalin(carteEnMain, this.readers[1]); // Appel de la deuxième fonction après 3 secondes\n        }, 1000);\n        setTimeout(() => {\n          fonctionnaliteesAttaque.methods.defendMalin(carteEnMain, this.readers[4]); // Appel de la deuxième fonction après 3 secondes\n        }, 2000);\n        // setTimeout(() => {\n        if (stockage.value === true) {\n          fonctionnaliteesAttaque.methods.defendMalin(carteEnMain, this.readers[6]); // Appel de la deuxième fonction après 3 secondes\n        }\n        //}, 3000);\n        for (let i = 0; i < cartesAttaque.length; i++) {\n          cartesAttaque[i].poseeDepuis = 2;\n        }\n        fonctionnaliteesAttaque.methods.resetDejaAttaquer();\n        let newReaders = [...this.readers]; // Copie des readers\n        this.$emit('update-readers', newReaders);\n      }\n    });\n  }\n};","map":{"version":3,"names":["Case_1_Defenseur_Attaque","Case_2_Defenseur_Attaque","Case_3_Defenseur_Attaque","Case_4_Defenseur_Attaque","io","fonctionnaliteesAttaque","cartesAttaque","stockage","carteEnMain","deckDefense","methods","genererDeckDefense","components","props","readers","type","Array","required","mounted","socket","on","data","readerID","replace","DebutTour","defendMalin","setTimeout","value","i","length","poseeDepuis","resetDejaAttaquer","newReaders","$emit"],"sources":["C:\\Users\\courluc\\IdeaProjects\\2024-NPA-PO-Hackstone\\src\\components\\plateauAttaque\\Case_defenseur\\CaseDefenseur_attaque.vue"],"sourcesContent":["<template>\r\n  <div class=\"topReaders_defense\">\r\n    <Case_1_Defenseur_Attaque :id=\"readers[0].id\" :image=\"readers[0].image\"/>\r\n    <Case_2_Defenseur_Attaque :id=\"readers[1].id\" :image=\"readers[1].image\"/>\r\n    <Case_3_Defenseur_Attaque :id=\"readers[4].id\" :image=\"readers[4].image\"/>\r\n    <Case_4_Defenseur_Attaque :id=\"readers[6].id\" :image=\"readers[6].image\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Case_1_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_1_Defenseur_Attaque.vue\";\r\nimport Case_2_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_2_Defenseur_Attaque.vue\";\r\nimport Case_3_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_3_Defenseur_Attaque.vue\";\r\nimport Case_4_Defenseur_Attaque from \"@/components/plateauAttaque/Case_defenseur/Case_4_Defenseur_Attaque.vue\";\r\nimport io from \"socket.io-client\";\r\nimport fonctionnaliteesAttaque, {cartesAttaque, stockage} from \"@/components/plateauAttaque/fonctionnaliteesAttaque.vue\";\r\n\r\nlet carteEnMain = [];\r\nlet deckDefense = fonctionnaliteesAttaque.methods.genererDeckDefense();\r\nexport default {\r\n  components: {\r\n    Case_1_Defenseur_Attaque,\r\n    Case_2_Defenseur_Attaque,\r\n    Case_3_Defenseur_Attaque,\r\n    Case_4_Defenseur_Attaque\r\n  },\r\n  props: {\r\n    readers: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  mounted()\r\n  {\r\n    this.socket = io('http://localhost:3000');\r\n\r\n    this.socket.on('rfidData', (data) => {\r\n      let {readerID} = data;\r\n      // Nettoie readerID pour enlever les caractères non numériques\r\n      readerID = readerID.replace(/\\D/g, ''); // Garde seulement les chiffres\r\n\r\n      if (readerID === \"1\") {\r\n        fonctionnaliteesAttaque.methods.DebutTour(deckDefense, carteEnMain);\r\n        fonctionnaliteesAttaque.methods.defendMalin(carteEnMain, this.readers[0]);\r\n        setTimeout(() => {\r\n          fonctionnaliteesAttaque.methods.defendMalin(carteEnMain, this.readers[1]); // Appel de la deuxième fonction après 3 secondes\r\n        }, 1000);\r\n        setTimeout(() => {\r\n          fonctionnaliteesAttaque.methods.defendMalin(carteEnMain, this.readers[4]); // Appel de la deuxième fonction après 3 secondes\r\n        }, 2000);\r\n       // setTimeout(() => {\r\n        if (stockage.value === true){\r\n            fonctionnaliteesAttaque.methods.defendMalin(carteEnMain, this.readers[6]); // Appel de la deuxième fonction après 3 secondes\r\n        }\r\n        //}, 3000);\r\n        for (let i = 0; i < cartesAttaque.length; i++){\r\n          cartesAttaque[i].poseeDepuis = 2;\r\n        }\r\n\r\n        fonctionnaliteesAttaque.methods.resetDejaAttaquer();\r\n        let newReaders = [...this.readers]; // Copie des readers\r\n        this.$emit('update-readers', newReaders);\r\n      }\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.topReaders_defense {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 147px;\r\n}\r\n</style>"],"mappings":"AAUA,OAAOA,wBAAuB,MAAO,yEAAyE;AAC9G,OAAOC,wBAAuB,MAAO,yEAAyE;AAC9G,OAAOC,wBAAuB,MAAO,yEAAyE;AAC9G,OAAOC,wBAAuB,MAAO,yEAAyE;AAC9G,OAAOC,EAAC,MAAO,kBAAkB;AACjC,OAAOC,uBAAuB,IAAGC,aAAa,EAAEC,QAAQ,QAAO,yDAAyD;AAExH,IAAIC,WAAU,GAAI,EAAE;AACpB,IAAIC,WAAU,GAAIJ,uBAAuB,CAACK,OAAO,CAACC,kBAAkB,CAAC,CAAC;AACtE,eAAe;EACbC,UAAU,EAAE;IACVZ,wBAAwB;IACxBC,wBAAwB;IACxBC,wBAAwB;IACxBC;EACF,CAAC;EACDU,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAOA,CAAA,EACP;IACE,IAAI,CAACC,MAAK,GAAIf,EAAE,CAAC,uBAAuB,CAAC;IAEzC,IAAI,CAACe,MAAM,CAACC,EAAE,CAAC,UAAU,EAAGC,IAAI,IAAK;MACnC,IAAI;QAACC;MAAQ,IAAID,IAAI;MACrB;MACAC,QAAO,GAAIA,QAAQ,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE;;MAExC,IAAID,QAAO,KAAM,GAAG,EAAE;QACpBjB,uBAAuB,CAACK,OAAO,CAACc,SAAS,CAACf,WAAW,EAAED,WAAW,CAAC;QACnEH,uBAAuB,CAACK,OAAO,CAACe,WAAW,CAACjB,WAAW,EAAE,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC;QACzEY,UAAU,CAAC,MAAM;UACfrB,uBAAuB,CAACK,OAAO,CAACe,WAAW,CAACjB,WAAW,EAAE,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;QAC7E,CAAC,EAAE,IAAI,CAAC;QACRY,UAAU,CAAC,MAAM;UACfrB,uBAAuB,CAACK,OAAO,CAACe,WAAW,CAACjB,WAAW,EAAE,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;QAC7E,CAAC,EAAE,IAAI,CAAC;QACT;QACC,IAAIP,QAAQ,CAACoB,KAAI,KAAM,IAAI,EAAC;UACxBtB,uBAAuB,CAACK,OAAO,CAACe,WAAW,CAACjB,WAAW,EAAE,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;QAC/E;QACA;QACA,KAAK,IAAIc,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAItB,aAAa,CAACuB,MAAM,EAAED,CAAC,EAAE,EAAC;UAC5CtB,aAAa,CAACsB,CAAC,CAAC,CAACE,WAAU,GAAI,CAAC;QAClC;QAEAzB,uBAAuB,CAACK,OAAO,CAACqB,iBAAiB,CAAC,CAAC;QACnD,IAAIC,UAAS,GAAI,CAAC,GAAG,IAAI,CAAClB,OAAO,CAAC,EAAE;QACpC,IAAI,CAACmB,KAAK,CAAC,gBAAgB,EAAED,UAAU,CAAC;MAC1C;IACF,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}