{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bottomReaders_attaque\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Case_1_Attaquant_Attaque = _resolveComponent(\"Case_1_Attaquant_Attaque\");\n  const _component_Case_2_Attaquant_Attaque = _resolveComponent(\"Case_2_Attaquant_Attaque\");\n  const _component_Case_3_Attaquant_Attaque = _resolveComponent(\"Case_3_Attaquant_Attaque\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Case_1_Attaquant_Attaque, {\n    id: $data.chat[2].id,\n    image: $data.chat[2].image\n  }, null, 8, [\"id\", \"image\"]), _createVNode(_component_Case_2_Attaquant_Attaque, {\n    id: $data.chat[3].id,\n    image: $data.chat[3].image\n  }, null, 8, [\"id\", \"image\"]), _createVNode(_component_Case_3_Attaquant_Attaque, {\n    id: $data.chat[5].id,\n    image: $data.chat[5].image\n  }, null, 8, [\"id\", \"image\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Case_1_Attaquant_Attaque","id","$data","chat","image","_component_Case_2_Attaquant_Attaque","_component_Case_3_Attaquant_Attaque"],"sources":["C:\\Users\\courluc\\IdeaProjects\\2024-NPA-PO-Hackstone\\src\\components\\plateauAttaque\\Case_attaquant\\CaseAttaquant_attaque.vue"],"sourcesContent":["<template>\r\n  <div class=\"bottomReaders_attaque\">\r\n    <Case_1_Attaquant_Attaque :id=\"chat[2].id\" :image=\"chat[2].image\"/>\r\n    <Case_2_Attaquant_Attaque :id=\"chat[3].id\" :image=\"chat[3].image\"/>\r\n    <Case_3_Attaquant_Attaque :id=\"chat[5].id\" :image=\"chat[5].image\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Case_1_Attaquant_Attaque from \"@/components/plateauAttaque/Case_attaquant/Case_1_Attaquant_Attaque.vue\";\r\nimport Case_2_Attaquant_Attaque from \"@/components/plateauAttaque/Case_attaquant/Case_1_Attaquant_Attaque.vue\";\r\nimport Case_3_Attaquant_Attaque from \"@/components/plateauAttaque/Case_attaquant/Case_1_Attaquant_Attaque.vue\";\r\nimport io from \"socket.io-client\";\r\nimport plateauFinaleAttaquant from \"@/components/plateauAttaque/PlateauFinaleAttaquant.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    Case_1_Attaquant_Attaque,\r\n    Case_2_Attaquant_Attaque,\r\n    Case_3_Attaquant_Attaque\r\n  },\r\n  data() {\r\n    return {\r\n      chat: plateauFinaleAttaquant.data().readers,\r\n      card: {},\r\n      readerID: null\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.socket = io('http://localhost:3000');\r\n\r\n    this.socket.on('rfidData', (data) => {\r\n      let { readerID, card } = data;\r\n      if (card.type === 'attaque') {\r\n\r\n        // Nettoie readerID pour enlever les caractères non numériques\r\n        readerID = readerID.replace(/\\D/g, ''); // Garde seulement les chiffres\r\n\r\n        this.card = card;\r\n        this.card.image = card.image;\r\n        this.readerID = readerID;\r\n\r\n        // Convertir readerID en nombre\r\n        const readerIndex = this.chat.findIndex(r => r.id === Number(readerID));\r\n\r\n        if (readerIndex !== -1) {\r\n          this.chat[readerIndex] = { ...this.chat[readerIndex], image: card.image };\r\n        }\r\n      } else {\r\n        console.log(`Carte non valide: type ${card.type}. Seules les cartes de type attaque sont autorisées.`);\r\n      }\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bottomReaders_attaque {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 147px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAuB;;;;;uBAAlCC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,YAAA,CAAmEC,mCAAA;IAAxCC,EAAE,EAAEC,KAAA,CAAAC,IAAI,IAAIF,EAAE;IAAGG,KAAK,EAAEF,KAAA,CAAAC,IAAI,IAAIC;gCAC3DL,YAAA,CAAmEM,mCAAA;IAAxCJ,EAAE,EAAEC,KAAA,CAAAC,IAAI,IAAIF,EAAE;IAAGG,KAAK,EAAEF,KAAA,CAAAC,IAAI,IAAIC;gCAC3DL,YAAA,CAAmEO,mCAAA;IAAxCL,EAAE,EAAEC,KAAA,CAAAC,IAAI,IAAIF,EAAE;IAAGG,KAAK,EAAEF,KAAA,CAAAC,IAAI,IAAIC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}